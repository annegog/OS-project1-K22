Anna Gogoula
OS project1 2021
—----------------------------------------------------------------------
gcc -g -Wall producer_parent.c -o producer_parent -lpthread
gcc -g -Wall consumer_child.c -o consumer_child  -lpthread
./producer_parent

PRODUCER (producer_parent.c): 
    Αρχικά δημιουργούμε και αρχικοποιούμε 3 σημαφόρους, που θα χρειαστουν στην συνέχεια. Ο πρώτος σημαφόρος αρχικοποιήται στο 1 
και οι 2 άλλοι στο 0 ώστε να μπορούμε να μπλοκάρουμε το παιδί και τον πατέρα (θα χρειαστεί στην συνέχεια). Γίνονται κάποιοι 
έλεγχοι για τους σημαφόρους, αρχικοποιούμε τα ορίσματα που δεχόμαστε και βρίσκουμε πόσες σειρές έχει το αρχείο που θέλουμε.
    Μετά δημιουργείται η διαμεριζόμενη μνήμη, γίνονται κάποιοι έλεγχοι και περνούν στην μνήμη απαραίτητες τιμές. 
Οι γραμμές του αρχείου, ο αριθμός των παιδιών που έχει δημιουργήσει ο “πατέρας”, τον αριθμό των δοσοληψιών που πρέπει να κάνει 
κάθε παιδί και έναν μετρητή για να γνωρίζουμε πόσα παιδιά έχουν τελειώσει τις δοσοληψίες τους.
	Χρησιμοποιούμε τον σημαφόρο ώστε να γίνει η δημιουργία των παιδιών, χωρίς να υπάρχουν παρεμβάσεις και μετά ξεκινάει 
το critical section. Εως ότου το running δεν είναι 0, Υπάρχει μία συνθήκη που όταν ισχύει σημαίνει ότι έχουν γίνει όλες 
οι δοσοληψίες των παιδιών επομένως δεν θέλουμε να βρούμε άλλη γραμμή. Εκεί ο πατέρας δέχεται το αίτημα του παιδιού για μία 
δοσοληψία (μια συγκεκριμένη σειρά του αρχείου), ψάχνει στο αρχείο την σειρά αυτη, την αποθηκεύει στο some_text του shared memory 
(ώστε να μπορεί το παιδί να έχει πρόσβαση). (Περιγράφεται πιο κάτω πως γίνεται η διαδικασία μαζί με των παιδιών).
	Στη συνέχεια ο πατέρας περιμένει τα παιδιά να τελειώσουν τις δοσοληψίες τους. Γίνονται έλεγχοι, κλείνουν οι σημαφόροι 
και γίνεται unlink τους.

CONSUMERS (consumer_child.c):
	Ανοίγουν τα ονόματα των σημαφόρων, ώστε να υπάρχουν κοινοί σημαφόροι. Κάνουμε απαραίτητους ελέγχους να ξέρουμε αν έχουν 
ανοίξει οι σημαφόροι.
    Δηλώνεται η κοινή διαμοιραζόμενη μνήμη και ξεκινά το critical section.
	Για κάθε δοσοληψία (εως Ν)  επιλέγεται ένας τυχαίος αριθμός μέχρι τον αριθμό των γραμμών του αχρείου, ξεκινάει να 
μετράει ο χρόνος και όταν επιστραφεί απο το πατέρα η γραμμή, αυτή εκτυπώνεται. Ο χρόνος σταματάει να μετράει και ο χρόνος καθεμίας 
δοσοληψίας προστίθεται σε μία μεταβλητή. Ώστε όταν τελειώσει το κάθε παιδί να υπολογίζεται ο μέσος χρόνος που έκανε.
	Στη συνέχεια ο μετρητής που υπολογίζει τα παιδιά  αυξάνεται και γίνεται έλεγχος αν το τρέχον παιδί είναι το τελευταίο. 
Τέλος γίνονται έλεγχοι για την διαμοιραζόμενη μνήμη και κλείνουν οι σημαφόροι.

Περιγραφή critical section:
→ Ο πατέρας μπαίνει στην while επομένως τον κάνουμε block (κάνουμε wait τον σημαφόρο 3) ώστε να τρέξει το παιδί και 
    να κάνει την αίτηση του. 
→ Το παιδί κάνει down τον σημαφόρο ώστε να μην μπλεχτουν και τρέχουν ταυτόχρονο και γίνονται κι άλλες αιτήσεις. 
    Το παιδί ζητάει μια τυχαία γραμμή, ο χρόνος ξεκινά να μετρά και κάνουμε up τον σημαφόρο (semaphore 3) ώστε να 
    μπορεί να ψάξει ο πατέρας την γραμμή που αιτήθηκε το παιδί. Επίσης κάνουμε down τον σημαφόρο 2 ώστε να μπορέσει 
    ο πατέρας να βρεί και να επιστρέψει την γραμμή.
→Ο πατέρας ψάχνει την γραμμή, την αποθηκεύει και κάνει up τον σημαφόρο 2.
→Το παιδί εκτυπώνει την γραμμή που ζήτησε από τον γονέα, ο χρόνος σταματάει να μετράει και ο σημαφόρος (1) γίνεται up, 
    άρα ξεμπλοκάρετε το παιδί και μπορούν να γίνουν και άλλες αιτήσεις. Μετράμε την διαφορά του χρόνου για κάθε δοσοληψία των παιδιών.
→ Κάθε φορά που τελειώνει ένα παιδί εκτυπώνεται ο μέσος χρόνος που έκανε.
Συνεχίζεται μέχρι να τελειώσουν όλα τα παιδιά.
→Μόλις τελειώσει και το τελευταίο παιδί, ξεμπλοκάρει ο πατέρας (up semaphore 3).
→Επομένως το running γίνεται 0 και σταματάει να εκτελείται η while.

—------------------------------------------------------------------------------------------------------------------------

* Δεν έχω κάνει Makefile
* Δεν τρέχει καλά σε πολλές περιπτώσεις, γιατί απ’ ότι είδα κάποιες φορές μηδενίζεται ο μετρητής που έχω για τα παιδιά 
άρα φαίνεται ότι δεν τελειώνουν όλα τα παιδιά. Ίσως φταίει ότι πολλά παιδιά κάνουν exit με χρόνο -nan. :/
